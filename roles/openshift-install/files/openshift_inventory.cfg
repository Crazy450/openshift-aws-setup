# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes

# Set variables common for all OSEv3 hosts
[OSEv3:vars]

# SSH user, this user should allow ssh based auth without requiring a password
ansible_ssh_user=ec2-user

# If ansible_ssh_user is not root, ansible_become must be set to true
ansible_become=true

# Set cloud provider to AWS
# Note experiencing issues with this on first install, as workaround
# install it without the cloud provider and then ssh to bastion, uncomment
# in openshift_inventory.cfg and re-run installation from bastion directly
#openshift_cloudprovider_kind=aws
#openshift_cloudprovider_aws_access_key={{ lookup('env','AWS_ACCESS_KEY_ID') }}
#openshift_cloudprovider_aws_secret_key={{ lookup('env','AWS_SECRET_ACCESS_KEY') }}

deployment_type={{deployment_type}}

# We need a wildcard DNS setup for our public access to services
openshift_master_default_subdomain={{public_subdomain_prefix}}.{{public_dns_zone}}

# uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]

# Uncomment the lines below to enable metrics for the cluster and set the hostname
openshift_hosted_metrics_deploy=true
#openshift_metrics_hawkular_hostname=metrics.{{public_subdomain_prefix}}.{{public_dns_zone}}

#disable checks
openshift_disable_check=docker_storage,docker_storage_driver,memory_availability

# Create the masters host group. Be explicit with the openshift_hostname,
# otherwise it will resolve to something like ip-10-0-1-98.ec2.internal and use
# that as the node name.
[masters]
master.{{dns_zone}} openshift_hostname=master.{{dns_zone}} openshift_public_hostname={{public_dns_zone}}

# host group for etcd
[etcd]
master.{{dns_zone}}

# host group for nodes, includes region info
[nodes]
master.{{dns_zone}} openshift_node_labels="{'region': 'infra', 'zone': 'default'}" openshift_schedulable=true
{% for index in range(1,app_nodes+1) %}
node{{ index }}.{{dns_zone}} openshift_hostname=node{{ index }}.{{dns_zone}} openshift_node_labels="{'region': 'primary', 'zone': '{{ 'west' if index is divisibleby 2 else 'east'}}'}"
{% endfor %}