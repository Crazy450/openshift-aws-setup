---

- ec2_ami_find:
     name: "RHEL-7.3*"
     owner: "{{redhat_owner_id}}"
     # Originally set for Origin
     #name: "amzn-ami-hvm-*"
     #owner: "{{amazon_owner_id}}"
     architecture: "x86_64"
     virtualization_type: "hvm"
     sort: "creationDate"
     sort_order: "descending"
     sort_end: 1
     region: "{{region}}"
  register: "bastion_ami_find"

- ec2_ami_find:
     name: "RHEL-7.3*"
     owner: "{{redhat_owner_id}}"
     architecture: "x86_64"
     virtualization_type: "hvm"
     sort: "creationDate"
     sort_order: "descending"
     sort_end: 1
     region: "{{region}}"
  register: "ami_find"

- name: Provision master
  ec2:
    instance_type: "{{master_amisize}}"
    image:  "{{ami_find['results'][0]['ami_id']}}"
    region: "{{region}}"
    wait: true
    key_name: "{{aws_key_pair}}"
    vpc_subnet_id: "{{subnet_facts['subnet']['id']}}"
    group: ['{{namespace}}-vpc', '{{namespace}}-public-ingress', '{{namespace}}-public-egress', '{{namespace}}-ssh']
    volumes:
      - device_name: "{{ami_find['results'][0]['root_device_name']}}" 
        volume_size: "{{volume_size}}"
        delete_on_termination: true
    count_tag:
      Name: "master-{{namespace}}"
    instance_tags:
      Name: "master-{{namespace}}"
      namespace: "{{namespace}}" 
    exact_count: 1
  register: ec2_master

- name: allocate a new elastic IP and associate it with an instance
  ec2_eip:
   device_id: "{{ec2_master['tagged_instances'][0]['id']}}"
   region: "{{region}}"
  register: master_elastic_ip

- name: Provision node1
  ec2:
    instance_type: "{{amisize}}"
    image:  "{{ami_find['results'][0]['ami_id']}}"
    region: "{{region}}"
    wait: true
    key_name: "{{aws_key_pair}}"
    vpc_subnet_id: "{{subnet_facts['subnet']['id']}}"
    group: ['{{namespace}}-vpc', '{{namespace}}-public-ingress', '{{namespace}}-public-egress', '{{namespace}}-ssh']
    volumes:
      - device_name: "{{ami_find['results'][0]['root_device_name']}}"
        volume_size: "{{volume_size}}"
        delete_on_termination: true
    count_tag:
      Name: "node1-{{namespace}}"
    instance_tags:
      Name: "node1-{{namespace}}"
      namespace: "{{namespace}}"
    exact_count: 1
    assign_public_ip: yes
  register: ec2_node1

- name: Provision node2
  ec2:
    instance_type: "{{amisize}}"
    image:  "{{ami_find['results'][0]['ami_id']}}"
    region: "{{region}}"
    wait: true
    key_name: "{{aws_key_pair}}"
    vpc_subnet_id: "{{subnet_facts['subnet']['id']}}"
    group: ['{{namespace}}-vpc', '{{namespace}}-public-ingress', '{{namespace}}-public-egress', '{{namespace}}-ssh']
    volumes:
      - device_name: "{{ami_find['results'][0]['root_device_name']}}"
        volume_size: "{{volume_size}}"
        delete_on_termination: true
    count_tag:
      Name: "node2-{{namespace}}"
    instance_tags:
      Name: "node2-{{namespace}}"
      namespace: "{{namespace}}"
    exact_count: 1
    assign_public_ip: yes
  register: ec2_node2

- name: Provision bastion
  ec2:
    instance_type: "{{bastion_amisize}}"
    image:  "{{bastion_ami_find['results'][0]['ami_id']}}"
    region: "{{region}}"
    wait: true
    key_name: "{{aws_key_pair}}"
    vpc_subnet_id: "{{subnet_facts['subnet']['id']}}"
    group: ['{{namespace}}-vpc', '{{namespace}}-public-ingress', '{{namespace}}-public-egress', '{{namespace}}-ssh']
    count_tag:
      Name: "bastion-{{namespace}}"
    instance_tags:
      Name: "bastion-{{namespace}}"
      namespace: "{{namespace}}"
    exact_count: 1
    assign_public_ip: yes
  register: ec2_bastion

- name: register VMs facts
  set_fact:
   master_private_ip: "{{ec2_master['tagged_instances'][0]['private_ip']}}"
   master_public_ip: "{{master_elastic_ip['public_ip']}}"
   node1_private_ip: "{{ec2_node1['tagged_instances'][0]['private_ip']}}"
   node1_public_ip: "{{ec2_node1['tagged_instances'][0]['public_ip']}}"
   node2_private_ip: "{{ec2_node2['tagged_instances'][0]['private_ip']}}"
   node2_public_ip: "{{ec2_node2['tagged_instances'][0]['public_ip']}}"
   bastion_private_ip: "{{ec2_bastion['tagged_instances'][0]['private_ip']}}"
   bastion_public_ip: "{{ec2_bastion['tagged_instances'][0]['public_ip']}}"